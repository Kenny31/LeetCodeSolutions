class Solution {
    public int searchInsert(int[] nums, int target) {
        if(nums.length == 1){
            if(nums[0] == target)
                return 0;
            else if(nums[0] < target)
                return 1;
            else
                return 0;
        }
        if(nums.length == 2){
            if(nums[0] == target)
                return 0;
            else if(nums[1] == target)
                return 1;
            else if(nums[0] > target)
                return 0;
            else if(nums[0] < target && target < nums[1])
                return 1;
            else
                return 2;
        }
        if(nums[0] > target)
            return 0;
        if(nums[nums.length-1] < target)
            return nums.length;

        int left = 0;
        int right = nums.length-1;
        while(left <= right){
            int mid = left + (right-left)/2;
            if(nums[mid] == target)
                return mid;
            else if(nums[mid] < target && target < nums[mid+1])
                return mid+1;
            else if (nums[mid] > target && target > nums[mid-1])
                return mid;
            else if(nums[mid] < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        return -1;
    }
}