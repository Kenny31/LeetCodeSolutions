class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        if(k == nums.length)
            return nums;

        List<Integer>[] bucket = new List[nums.length + 1];
        Map<Integer, Integer> mp = new HashMap<>();
        for(int i=0; i<nums.length; i++){
            mp.put(nums[i], mp.getOrDefault(nums[i], 0)+1);
        }

        for(int key : mp.keySet()){
            int freq = mp.get(key);
            if(bucket[freq] == null){
                bucket[freq] = new ArrayList<>();
            }
            bucket[freq].add(key);
        }

        int result[] = new int[k];
        int count = 0;
        for(int i = bucket.length-1; i>=0 && count<k; i--){
            if(bucket[i] != null){
                for(Integer index : bucket[i]){
                    result[count] = index;
                    count++;
                }
            }
        }
        return result;
    }
}